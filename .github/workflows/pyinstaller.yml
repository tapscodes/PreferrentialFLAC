name: Build with PyInstaller

on:
  push:
    paths:
      - '**.py'
      - '.github/workflows/pyinstaller.yml'
  pull_request:
    paths:
      - '**.py'
      - '.github/workflows/pyinstaller.yml'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: download ffmpeg (Linux)
        if: runner.os == 'Linux'
        run: |
          wget https://github.com/BtbN/FFmpeg-Builds/releases/latest/download/ffmpeg-n7.1-latest-linux64-gpl-7.1.tar.xz
          tar xf ffmpeg-n7.1-latest-linux64-gpl-7.1.tar.xz
          cp ffmpeg-n7.1-latest-linux64-gpl-7.1/bin/ffmpeg .

      - name: download ffmpeg (macOS)
        if: runner.os == 'macOS'
        run: |
          curl --fail -Lo ffmpeg.zip https://evermeet.cx/ffmpeg/getrelease/zip
          unzip ffmpeg.zip
          mv ffmpeg ffmpeg-macos

      - name: download ffmpeg (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          curl -LO https://github.com/BtbN/FFmpeg-Builds/releases/latest/download/ffmpeg-n7.1-latest-win64-gpl-7.1.zip
          unzip ffmpeg-n7.1-latest-win64-gpl-7.1.zip
          cp ffmpeg-n7.1-latest-win64-gpl-7.1/bin/ffmpeg.exe .

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PySide6 pyinstaller

      - name: build executable
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            pyinstaller --onefile --add-binary "ffmpeg:." --name PrefferentialFLAC-Linux PreferrentialFLAC.py
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            pyinstaller --onefile --add-binary "ffmpeg-macos:ffmpeg" --name PrefferentialFLAC-MacOS PreferrentialFLAC.py
          else
            pyinstaller --onefile --add-binary "ffmpeg.exe;." --name PrefferentialFLAC-Windows PreferrentialFLAC.py
          fi
        shell: bash

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PrefferentialFLAC-${{ matrix.os == 'ubuntu-latest' && 'Linux' || (matrix.os == 'macos-latest' && 'MacOS' || 'Windows') }}
          path: dist/PrefferentialFLAC-*